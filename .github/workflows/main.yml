name: Auto Deploy

on:
  push:
    branches:
      - master

#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Install SSH client
#        run: sudo apt-get install openssh-client
#
#      - name: Configure SSH
#        run: |
#          mkdir -p ~/.ssh
#          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/mac.pem
#          chmod 400 ~/.ssh/mac.pem
#
#      - name: Add SSH fingerprint to known_hosts
#        run: ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
#
#      - name: SSH Deploy
#        run: |
#          ssh -i ~/.ssh/mac.pem ${{ secrets.USERNAME }}@${{ secrets.HOST }} <<EOF
#            cd ${{ secrets.PATH }}
#            sudo systemctl stop ${{ secrets.SERVICE_NAME }}
#            source venv/bin/activate
#            git pull
#            pip3 install -r requirements.txt
#            sudo systemctl start ${{ secrets.SERVICE_NAME }}
#          EOF


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SSH client
        run: sudo apt-get install openssh-client

      - name: Create SSH key file
        run: echo "${{ secrets.SSH_KEY }}" > ${{ runner.temp }}/mac.pem && chmod 400 ${{ runner.temp }}/mac.pem

      - name: SSH Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ runner.temp }}/mac.pem
          passphrase: ${{ secrets.PASSPHRASE }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.PATH }}
            sudo systemctl stop ${{ secrets.SERVICE_NAME }}
            source venv/bin/activate
            git pull
            pip3 install -r requirements.txt
            sudo systemctl start ${{ secrets.SERVICE_NAME }}
  
  
  
  

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} successfully completed!